<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
        
    <context:property-placeholder location="jdbc.properties"></context:property-placeholder>
    
    <context:component-scan base-package="com"></context:component-scan>
    
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

<!--    配置抽象层的数据源-->
    <bean id="atomikosDataSourceBean" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close" abstract="true">
        <property name="xaDataSourceClassName" value="com.mysql.cj.jdbc.MysqlXADataSource"></property>
        <property name="poolSize" value="10"/>
        <property name="minPoolSize" value="10"/>
        <property name="maxPoolSize" value="30"/>
        <property name="borrowConnectionTimeout" value="60"/>
        <property name="reapTimeout" value="20"/>
        <property name="maxIdleTime" value="60"/>
        <property name="maintenanceInterval" value="60"/>
        <property name="testQuery">
            <value>SELECT 1</value>
        </property>
    </bean>

<!--    各自的数据源-->
    <bean parent="atomikosDataSourceBean" id="dataSourceLog">
        <property name="uniqueResourceName">
            <value>dataSourceLog</value>
        </property>
        <property name="xaDataSourceClassName" value="com.mysql.cj.jdbc.MysqlXADataSource"></property>
        <property name="xaProperties">
            <props>
                <prop key="URL">${jdbc.url.log}</prop>
                <prop key="user">${jdbc.username}</prop>
                <prop key="password">${jdbc.password}</prop>
            </props>
        </property>
    </bean>


    <bean parent="atomikosDataSourceBean" id="dataSourceOrder">
        <property name="uniqueResourceName">
            <value>dataSourceOrder</value>
        </property>
        <property name="xaDataSourceClassName" value="com.mysql.cj.jdbc.MysqlXADataSource"></property>
        <property name="xaProperties">
            <props>
                <prop key="URL">${jdbc.url.order}</prop>
                <prop key="user">${jdbc.username}</prop>
                <prop key="password">${jdbc.password}</prop>
            </props>
        </property>
    </bean>

<!--    配置sessionfactory-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sessionFactorylog">
        <property name="dataSource" ref="dataSourceLog"></property>
        <property name="typeAliasesPackage" value="com.logmapper"></property>
     </bean>

    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sessionFactoryOrder">
        <property name="dataSource" ref="dataSourceOrder"></property>
        <property name="typeAliasesPackage" value="com.ordermapper"></property>
    </bean>
<!--    配置扫描mapper-->
    <bean id="mapperScannerLog" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.logmapper"></property>
        <property name="sqlSessionFactoryBeanName" value="sessionFactorylog"></property>
     </bean>

    <bean id="mapperScannerorder" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ordermapper"></property>
        <property name="sqlSessionFactoryBeanName" value="sessionFactoryOrder"></property>
    </bean>


<!--配置事务-->

    <bean class="com.atomikos.icatch.jta.UserTransactionManager" id="userTransactionManager" init-method="init" destroy-method="close">
        <property name="forceShutdown" value="false"></property>
    </bean>

    <bean class="com.atomikos.icatch.jta.UserTransactionImp" id="userTransactionImp">
        <property name="transactionTimeout" value="300000"></property>
    </bean>

    <bean class="org.springframework.transaction.jta.JtaTransactionManager" id="jtaTransactionManager">
        <property name="transactionManager">
            <ref bean="userTransactionManager"></ref>
        </property>
        <property name="userTransaction">
            <ref bean="userTransactionImp"></ref>
        </property>
        <property name="allowCustomIsolationLevels" value="true"></property>
    </bean>

    <tx:annotation-driven transaction-manager="jtaTransactionManager" proxy-target-class="true"></tx:annotation-driven>
    
    <tx:advice transaction-manager="jtaTransactionManager" id="txadvice">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" isolation="DEFAULT"
                       rollback-for="java.lang.Exception" />
            <tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT"
                       rollback-for="java.lang.Exception" />
            <tx:method name="insert*" propagation="REQUIRED" isolation="DEFAULT"
                       rollback-for="java.lang.Exception" />
            <tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT"
                       rollback-for="java.lang.Exception" />
            <tx:method name="modify*" propagation="REQUIRED" isolation="DEFAULT"
                       rollback-for="java.lang.Exception" />
            <tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT"
                       rollback-for="java.lang.Exception" />
            <!-- 查询方法 -->
            <tx:method name="query*" read-only="true" />
            <tx:method name="select*" read-only="true" />
            <tx:method name="find*" read-only="true" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="tranpointcut" expression="execution(* com.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="txadvice" pointcut-ref="tranpointcut"></aop:advisor>
    </aop:config>



</beans>